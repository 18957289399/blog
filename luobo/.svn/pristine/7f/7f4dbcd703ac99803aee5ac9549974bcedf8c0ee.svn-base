package me.huding.luobo.model;

import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;

import me.huding.luobo.model.base.BaseBlog;

import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Page;
import com.jfinal.plugin.activerecord.Record;
import com.jfinal.plugin.activerecord.TableMapping;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Blog extends BaseBlog<Blog> {
	public static final Blog dao = new Blog();

	/**
	 * 根据签名查找博客
	 * @param signature
	 * @return
	 */
	public static Blog findBySignature(String signature) {
		return dao.findFirst("select id from blog where signature = ? limit 1",signature);
	}


	/**
	 * 查询博客时不需要查询的字段
	 */
	private static final String[] REMOVED_ATTRS = {"content","signature","lastUpdateTime","path"};

	/**
	 * 
	 * @param pageNum
	 * @param pageSize
	 * @return
	 */
	public static Page<Record> paginate(int pageNum,int pageSize){
		Set<String> columns = TableMapping.me().getTable(Blog.class).getColumnTypeMap().keySet();
		Set<String> attrNames = new HashSet<String>(columns);
		for(int j = 0;j < REMOVED_ATTRS.length;j ++){
			attrNames.remove(REMOVED_ATTRS[j]);
		}
		StringBuffer selectBuffer = new StringBuffer();
		selectBuffer.append("select ");
		Iterator<String> it = attrNames.iterator();
		int len = attrNames.size();
		int i = 0;
		while(it.hasNext()){
			selectBuffer.append(it.next());
			if(i != len - 1){
				selectBuffer.append(",");
			}
			i ++;
		}
		String sqlExceptSelect = "from blog order by publishTime desc";
		return Db.paginate(pageNum, pageSize, selectBuffer.toString(), sqlExceptSelect);
	}
}
