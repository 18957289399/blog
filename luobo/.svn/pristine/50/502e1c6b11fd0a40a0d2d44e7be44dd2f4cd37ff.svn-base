package me.huding.luobo.model;

import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;

import me.huding.luobo.model.base.BaseBlog;

import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Page;
import com.jfinal.plugin.activerecord.Record;
import com.jfinal.plugin.activerecord.TableMapping;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Blog extends BaseBlog<Blog> {
	public static final Blog dao = new Blog();

	/**
	 * 根据签名查找博客
	 * @param signature
	 * @return
	 */
	public static Blog findBySignature(String signature) {
		return dao.findFirst("select id from blog where signature = ? limit 1",signature);
	}



	/**
	 * 
	 * @param pageNum
	 * @param pageSize
	 * @return
	 */
	public static Page<Record> paginate(int pageNum,int pageSize){
		String sqlExceptSelect = "from blog_display order by publishTime desc";
		String select = "select * ";
		return Db.paginate(pageNum, pageSize,select, sqlExceptSelect);
	}
	
	public static List<Blog> findAll(String... columns){
		StringBuffer selectBuffer = new StringBuffer();
		selectBuffer.append("select ");
		for(int i = 0;i < columns.length;i ++){
			selectBuffer.append(columns[i]);
			if(i != columns.length - 1){
				selectBuffer.append(",");
			}
		}
		selectBuffer.append(" from blog");
		return dao.find(selectBuffer.toString());
	}
}
